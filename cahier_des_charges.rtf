{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1036{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\ul\f0\fs52\lang12\par
Cahier des charges\par
\fs36\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\tab Puissance 4\ul\par

\pard\sa200\sl276\slmult1\fs22\par
Contexte :\par
\ulnone\tab Dans le cadre du cours de d\'e9veloppement informatique, je souhaiterais cr\'e9er un puissance 4 en Java, tout en utilisant gitHub.\par
\ul\par
Objectif :\par
\ulnone\tab La mise en pratique des connaissances vues au cours de Java afin de cr\'e9er un projet fonctionnel.\par
\ul\par
Contraintes :\par

\pard 
{\pntext\f0 a.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pnlcltr{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\ulnone\tab Utilisation MVC\ul\par
{\pntext\f0 b.\tab}\ulnone\tab Utilisation d'au moins un framework Java\ul\par
{\pntext\f0 c.\tab}\ulnone\tab Impl\'e9mentation du code via gitHub\ul\par

\pard\sa200\sl276\slmult1\ulnone\par
\ul Description jeu :\ulnone\par
\tab Je souhaite cr\'e9er un puissance 4, je n'ai pas encore d\'e9termin\'e9 les sp\'e9cificit\'e9s au niveau des r\'e8gles que je vais rajouter pour le rendre diff\'e9rent. Ca sera probablement une modification de la grille, ou peut-\'eatre une jouabilit\'e9 \'e0 3 joueurs, j'y r\'e9fl\'e9chis encore.\par
\tab Les r\'e8gles de base du puissance 4 sont simples, chaque joueur dispose d'un nombre de pion de couleur diff\'e9rente, le but est de les superposer dans une grille afin de cr\'e9er une ligne verticale, horizontale ou encore diagonale de 4 pions de m\'eame couleur. Le premier r\'e9ussissant \'e0 en placer 4 comme ceci, gagne la partie.\ul\par
}

Classes :
Le jeu sera composé de 6 classes :
Une classe Grille, qui va s'occuper de donner les caractéristiques de la grille de jeu, ainsi que des MouseEvent pour pouvoir gérer les évenements de la souris, sans lesquels il est impossible de jouer.
Une classe Partie, qui va s'occuper de en majorité des règles du jeu en majorité, donc elle contiendra les méthodes permettant de tester si il y a un vainqueur, ainsi que les tests permettant de voir si il est possible de déposer un pion à cet endroit. Elle contient aussi la main qui permet d'initialiser une partie.
Une classe Cellule, qui va déterminer certaines caractéristiques tel que la couleur, taille des pions, la couleur d'arrière plan des cases, ainsi que la couleur de la case lorsqu'un pion sera posé.
Une classe Message, qui va tester que le chiffre ou nombre de lignes/colonnes rentrés au début de la partie soit bien un entier, et contiendra deux autres méthodes permettant d'afficher les messages pour les joueurs ainsi que les messages d'erreurs.
Une classe Options qui va contenir les méthodes qui seront réutilisées dans la classe Grille pour la construction du tableau.
Une classe Gui qui s'occupe de l'interface graphique

